
Mitwirkende
===========

Mitwirkende an „Python for Everybody“
-------------------------------------

Andrzej Wójtowicz,
Elliott Hauser,
Stephen Catto,
Sue Blumenberg,
Tamara Brunnock,
Mihaela Mack,
Chris Kolosiwsky,
Dustin Farley,
Jens Leerssen,
Naveen KT,
Mirza Ibrahimovic,
Naveen (@togarnk),
Zhou Fangyi,
Alistair Walsh,
Erica Brody,
Jih-Sheng Huang,
Louis Luangkesorn,
and
Michael Fudge

Einzelheiten zu den Beiträgen finden Sie unter:

https://github.com/csev/py4e/graphs/contributors

Mitwirkende an „Python for Informatics“ 
---------------------------------------

Bruce Shields for copy editing early drafts, Sarah Hegge, Steven Cherry,
Sarah Kathleen Barbarow, Andrea Parker, Radaphat Chongthammakun, Megan
Hixon, Kirby Urner, Sarah Kathleen Barbrow, Katie Kujala, Noah Botimer,
Emily Alinder, Mark Thompson-Kular, James Perry, Eric Hofer, Eytan Adar,
Peter Robinson, Deborah J. Nelson, Jonathan C. Anthony, Eden Rassette,
Jeannette Schroeder, Justin Feezell, Chuanqi Li, Gerald Gordinier, Gavin
Thomas Strassel, Ryan Clement, Alissa Talley, Caitlin Holman, Yong-Mi
Kim, Karen Stover, Cherie Edmonds, Maria Seiferle, Romer Kristi D.
Aranas (RK), Grant Boyer, Hedemarrie Dussan,

Vorwort von „Think Python“
--------------------------

### Die seltsame Geschichte von „Think Python“

(Allen B. Downey)

Im Januar 1999 bereitete ich mich darauf vor, einen Einführungskurs in die Programmierung mit Java zu geben. Ich hatte ihn bereits dreimal unterrichtet und war frustriert. Die Durchfallquote in der Klasse war zu hoch, und selbst bei den Schülern, die erfolgreich waren, war das Leistungsniveau insgesamt zu niedrig.

Eines der Probleme, die ich sah, waren die Bücher. Sie waren zu umfangreich, enthielten zu viele unnötige Details über Java und nicht genug Anleitungen von guter Qualität, wie man programmiert. Außerdem litten sie alle unter dem Falltür-Effekt: Sie fingen einfach an, gingen allmählich voran, und dann, etwa ab Kapitel 5, fiel der Boden heraus. Die Studenten lernten zu schnell zu viel neues Material, und ich musste den Rest des Semesters damit verbringen, die Scherben aufzusammeln.

Zwei Wochen vor dem ersten Unterrichtstag beschloss ich, mein eigenes Buch zu schreiben. Meine Ziele waren:

-   Machen Sie es kurz. Es ist besser für die Schüler, 10 Seiten zu lesen, als 50 Seiten nicht zu lesen.

-   Vorsichtig mit dem Vokabular sein. Ich habe versucht, den Jargon zu minimieren und jeden Begriff bei der ersten Verwendung zu definieren.

-   Schrittweises Vorgehen. Um Falltüren zu vermeiden, habe ich die schwierigsten Themen in eine Reihe kleiner Schritte aufgeteilt.

-   Konzentrieren auf die Programmierung, nicht auf die Programmiersprache. Ich habe die kleinste nützliche Teilmenge von Java einbezogen und den Rest weggelassen.

Ich brauchte einen Titel und entschied mich aus einer Laune heraus für *How to Think Like a Computer Scientist*.

Meine erste Version war holprig, aber sie funktionierte. Die Schüler haben die Lektüre gelesen und genug verstanden, so dass ich die Unterrichtszeit auf die schwierigen und interessanten Themen verwenden und (was am wichtigsten ist) die Schüler üben lassen konnte.

Ich habe das Buch unter der GNU Free Documentation License veröffentlicht, die es den Benutzern erlaubt, das Buch zu kopieren, zu verändern und zu verbreiten.

\index{GNU Free Documentation License}
\index{Free Documentation License, GNU}

Was dann geschah, ist der coole Teil. Jeff Elkner, ein Highschool-Lehrer in Virginia, nahm sich meines Buches an und übersetzte es in Python. Er schickte mir eine Kopie seiner Übersetzung, und ich machte die ungewöhnliche Erfahrung, Python zu lernen, indem ich mein eigenes Buch las.

Jeff und ich überarbeiteten das Buch, fügten eine Fallstudie von Chris Meyers ein und veröffentlichten im Jahr 2001 *How to Think Like a Computer Scientist: Learning with Python*, ebenfalls unter der GNU Free Documentation License. Als Green Tea Press veröffentlichte ich das Buch und begann mit dem Verkauf von gedruckten Exemplaren über Amazon.com und College-Buchläden. Andere Bücher von Green Tea Press sind unter [greenteapress.com](greenteapress.com) erhältlich.

Im Jahr 2003 begann ich am Olin College zu unterrichten, und ich durfte zum ersten Mal Python unterrichten. Der Unterschied zu Java war frappierend. Die Studenten hatten weniger Mühe, lernten mehr, arbeiteten an interessanteren Projekten und hatten allgemein viel mehr Spaß.

In den letzten fünf Jahren habe ich das Buch weiterentwickelt, Fehler korrigiert, einige der Beispiele verbessert und Material hinzugefügt, insbesondere Übungen. Im Jahr 2008 begann ich mit der Arbeit an einer umfassenden Überarbeitung - zur gleichen Zeit wurde ich von einem Redakteur der Cambridge University Press kontaktiert, der an der Veröffentlichung der nächsten Ausgabe interessiert war. Gutes Timing!

Ich wünsche Ihnen viel Spaß bei der Arbeit mit diesem Buch und hoffe, dass es Ihnen hilft, zu programmieren und zumindest ein bisschen wie ein Informatiker zu denken.

### Danksagungen für „Think Python“ 

(Allen B. Downey)

Zunächst und vor allem danke ich Jeff Elkner, der mein Java-Buch in Python übersetzt hat, was dieses Projekt ins Rollen brachte und mich in die Sprache einführte, die sich als meine Lieblingssprache herausgestellt hat.

Ich danke auch Chris Meyers, der mehrere Abschnitte zu *How to Think Like a Computer Scientist* beigetragen hat.

Und ich danke der Free Software Foundation für die Entwicklung der GNU Free Documentation License, die meine Zusammenarbeit mit Jeff und Chris erst möglich gemacht hat.

\index{GNU Free Documentation License}
\index{Free Documentation License, GNU}

Ich danke auch den Redakteuren bei Lulu, die an *How to Think Like a Computer Scientist* gearbeitet haben.

Ich danke allen Studierenden, die an früheren Fassungen dieses Buches mitgearbeitet haben, und allen Autoren (die in einem Anhang aufgeführt sind), die mir Korrekturen und Vorschläge zugesandt haben.

Und ich danke meiner Frau Lisa für ihre Arbeit an diesem Buch, an Green Tea Press und an allem anderen auch.

Allen B. Downey\
Needham MA\

Allen Downey ist außerordentlicher Professor für Computerwissenschaften am Franklin W. Olin College of Engineering.

Mitwirkende an „Think Python“ 
-----------------------------

\index{Beiträge}\index{Mitwirkende}

(Allen B. Downey)

Mehr als 100 aufmerksame Leser haben in den letzten Jahren Vorschläge und Korrekturen eingesandt. Ihre Beiträge und ihre Begeisterung für dieses Projekt waren eine große Hilfe.

Einzelheiten über die Art der Beiträge dieser Personen finden Sie im Text „Think Python“.

Lloyd Hugh Allen, Yvon Boulianne, Fred Bremmer, Jonah Cohen, Michael
Conlon, Benoit Girard, Courtney Gleason and Katherine Smith, Lee Harr,
James Kaylin, David Kershaw, Eddie Lam, Man-Yong Lee, David Mayo, Chris
McAloon, Matthew J. Moelter, Simon Dicon Montford, John Ouzts, Kevin
Parks, David Pool, Michael Schmitt, Robin Shaw, Paul Sleigh, Craig T.
Snydal, Ian Thomas, Keith Verheyden, Peter Winstanley, Chris Wrobel,
Moshe Zadka, Christoph Zwerschke, James Mayer, Hayden McAfee, Angel
Arnal, Tauhidul Hoque and Lex Berezhny, Dr. Michele Alzetta, Andy
Mitchell, Kalin Harvey, Christopher P. Smith, David Hutchins, Gregor
Lingl, Julie Peters, Florin Oprina, D. J. Webre, Ken, Ivo Wever, Curtis
Yanko, Ben Logan, Jason Armstrong, Louis Cordier, Brian Cain, Rob Black,
Jean-Philippe Rey at Ecole Centrale Paris, Jason Mader at George
Washington University made a number Jan Gundtofte-Bruun, Abel David and
Alexis Dinno, Charles Thayer, Roger Sperberg, Sam Bull, Andrew Cheung,
C. Corey Capel, Alessandra, Wim Champagne, Douglas Wright, Jared
Spindor, Lin Peiheng, Ray Hagtvedt, Torsten Hübsch, Inga Petuhhov, Arne
Babenhauserheide, Mark E. Casida, Scott Tyler, Gordon Shephard, Andrew
Turner, Adam Hobart, Daryl Hammond and Sarah Zimmerman, George Sass,
Brian Bingham, Leah Engelbert-Fenton, Joe Funke, Chao-chao Chen, Jeff
Paine, Lubos Pintes, Gregg Lind and Abigail Heithoff, Max Hailperin,
Chotipat Pornavalai, Stanislaw Antol, Eric Pashman, Miguel Azevedo,
Jianhua Liu, Nick King, Martin Zuther, Adam Zimmerman, Ratnakar Tiwari,
Anurag Goel, Kelli Kratzer, Mark Griffiths, Roydan Ongie, Patryk
Wolowiec, Mark Chonofsky, Russell Coleman, Wei Huang, Karen Barber, Nam
Nguyen, Stéphane Morin, Fernando Tardio, and Paul Stoop.

